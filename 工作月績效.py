#!/usr/bin/env python
# coding: utf-8

# ## 引用套件

# 引用套件，如第一次執行須安裝套件openpyxl、tqdm<br>
# 安裝方法：新增一個單元格，輸入 pip install openpyxl  (套件名稱)執行<br>
# 或 pip install openpyxl -i http://pypi.douban.com/simple --trusted-host pypi.douban.com (更改中間的套件名)

import pandas as pd
import openpyxl
import warnings
import numpy as np
import datetime ,time
from pandas import ExcelWriter
from tqdm import tqdm
warnings.filterwarnings("ignore")
###################################################################
舉績率商品 = ['一般件','平安福','平安寶','全平安','防護盾','保平安',
 '真平安','組合套裝','呵護公教',]

舉績率目標 = 0.198
####################################################################
#輸入篩選條件
起始工作月 = eval(input('輸入核實績效、責任額起始工作月(ex:202005)'))
結束工作月 = eval(input('輸入核實績效、責任額結束工作月(ex:202102)'))
速報起始工作月 = eval(input('輸入速報績效、責任額起始工作月(ex:202005)'))
速報結束工作月 = eval(input('輸入速報績效、責任額起始工作月(ex:202005)'))
今年西元年 = eval(input('請輸入今年度西元年(用以計算總責任額，如輸入2021，總責任額區間為202013~202112)'))
重出單判斷 = {2:'初續業績',1:'考量重出單之新續年度'}
輸入重出單判斷 = eval(input('輸入是否考慮重出單(新契約不含重出單)(1:考慮,2:不考慮)'))

start_time = datetime.datetime.now()
progress = tqdm(total=10,ncols=40) #顯示進度條10個表

# ### 製作績效明細

# 資料夾需有檔案：
# 1. FINAL_SALES.xlsx
# 2. FINAL_SALES_ETC.xlsx
# 3. 銀行轄區.xlsx
# 4. 轄區表.xlsx
# 5. 責任額.xlsx
# 6. 單位人數.xlsx

#讀取檔案
print('讀取檔案...')
start_time = datetime.datetime.now()
df1 = pd.read_excel('FINAL_SALES.xlsx')
df2 = pd.read_excel('FINAL_SALES_ETC.xlsx')
bank_religion = pd.read_excel('銀行轄區.xlsx')
bank_religion = bank_religion[['單位代號','分行代號','團險輔導人員','銀行區部','分行別','營單位']]
print('開始整理欄位...')

def func_final_sales(data):
    #計算繳次欄位
    data['繳次'] = ''
    for row in range(len(data)):
        if data['保單鍵值'].iloc[row][0] == 'P':
            data['繳次'].iloc[row] = '首期'
        elif data['轉換繳別1'].iloc[row] == '躉繳':
            data['繳次'].iloc[row] = '0'
        elif data['應繳日'].iloc[row].day != data['投保始期'].iloc[row].day:#日期不等於
            data['繳次'].iloc[row] = '溢短繳'
        elif data['應繳日'].iloc[row].month == data['投保始期'].iloc[row].month:
            data['繳次'].iloc[row] = '首期'   
        elif data['轉換繳別1'].iloc[row] == '年繳':
            data['繳次'].iloc[row] = '溢短繳'   
        elif data['轉換繳別1'].iloc[row] == '半年繳':
            if ((data['應繳日'].iloc[row].month - data['投保始期'].iloc[row].month) % 2) == 0:
                data['繳次'].iloc[row] = '期繳' 
            else:
                data['繳次'].iloc[row] = '溢短繳' 
        elif data['轉換繳別1'].iloc[row] == '季繳':
            if ((data['應繳日'].iloc[row].month - data['投保始期'].iloc[row].month) % 3) == 0:
                data['繳次'].iloc[row] = '期繳' 
            else:
                data['繳次'].iloc[row] = '溢短繳' 
        elif data['轉換繳別1'].iloc[row] == '月繳':
            data['繳次'].iloc[row] = '期繳' 
    #計算件數欄位
    data['舉績件數'] = ''
    for row in range(len(data)):
        if data['繳次'].iloc[row] == '首期' and data['單據種類'].iloc[row] == 1 and data['實收保費'].iloc[row] > 0:

            if data['實收保費'].iloc[row] >= 4000:
                data['舉績件數'].iloc[row] =  data['業佣佔率'].iloc[row]

            elif data['實收保費'].iloc[row] * data['轉換繳別2'].iloc[row] >= 24000:
                data['舉績件數'].iloc[row] =  data['業佣佔率'].iloc[row]

            else:
                data['舉績件數'].iloc[row] =  data['業佣佔率'].iloc[row] * 0.25
        else:
            data['舉績件數'].iloc[row] = 0
    data['商品大類'] = data['商品別_中文'] == '一般件'
    data['商品大類'] = data['商品大類'].replace(True,'一般件').replace(False,'套裝件')
    data['業績單位5碼'] = data['業績單位'].str[:5]
    data['單位代號3碼'] = data['單位代號_7碼'].str[:3]

    #串接銀行轄區表
    data = data.merge(bank_religion,how = 'left',left_on = '業績單位5碼',right_on = '單位代號')
    for row in range(len(data)):
        if str(data['團險輔導人員'].iloc[row]) != 'nan':
            data['業績_輔導經理'].iloc[row] = data['團險輔導人員'].iloc[row]
            data['團營單位_2碼'].iloc[row] = data['營單位'].iloc[row]
            data['單位代號3碼'].iloc[row] = data['單位代號'].iloc[row][:3]
            data['專展區域_2碼'].iloc[row] = '銀行'
            data['區部中文_4碼'].iloc[row] = data['銀行區部'].iloc[row]
            data['單位中文_3碼'].iloc[row] = data['分行別'].iloc[row]
            data['單位代號_7碼'].iloc[row] = data['分行代號'].iloc[row]

    #保留所需欄位
    data = data.drop(['團險輔導人員','單位代號','銀行區部','分行別','分行代號','營單位','業績單位5碼'],axis = 1)
    #補空值
    data = data.fillna(0)
    #欄位轉小數點、數字格式
    data['舉績件數'] = data['舉績件數'].astype('float')
    data['FYP'] = data['FYP'].astype('float')
    data['發放工作月'] = data['發放工作月'].astype(int)

    #計算重出單欄位
    data['考量重出單之新續年度'] = data['初續業績']
    for row in range(len(data)):
        if data['重出單'].iloc[row] != 0:
            data['考量重出單之新續年度'].iloc[row] = '續年'
    data['作帳工作月(西元)'] = data['作帳工作月'].str.replace('工','')
    data['作帳工作月(西元)'] = (data['作帳工作月'].str.split('_').str[0].astype('int')+1911)*100     + data['作帳工作月(西元)'].str.split('_').str[1].astype('int')
    #欄位順序調整        
    data = data[['保單鍵值','投保始期','應繳日',
                '作帳日','作帳曆月','作帳工作月','兌現日期',
                '保單支給年度','業佣佔率','舉績單位',
                'FYP加成後','FYP','實收保費','拆分保費',
                '舉績件數','轉換繳別1','轉換繳別2','繳次',
                '保單系統別','初續業績','商品別_中文',
                '商品大類','經手人姓名','單位簡稱',
                '職級中文','專展區域_2碼','區部中文_4碼',
                '單位中文_3碼','單位代號_7碼','單位代號_3碼',
                '團營單位_2碼','舉績_輔導經理','發放工作月',
                'SAS_ID','重出單','考量重出單之新續年度','單據種類','作帳工作月(西元)']]
    return data
#製作final_sales、final_sales_etc表格
final_sales = func_final_sales(df1)
final_sales_etc = func_final_sales(df2)

#表格增加補件、是否為呵護公教、是否核實欄位
final_sales['補件'] = '原資料'
final_sales_etc['補件'] = '其他件'
final_sales_all = pd.concat([final_sales,final_sales_etc])
#保單號碼第一碼不為G判斷為呵護
final_sales_all['是否為呵護公教'] = final_sales_all['保單鍵值'].str[0] != 'G'
final_sales_all['是否核實'] = ''
final_sales_all['展業課代號'] = final_sales_all['舉績單位'].str[:4]

#計算呵護件數、判斷當工
for x in range(len(final_sales_all)):
    if final_sales_all['是否為呵護公教'].iloc[x] == True:
        if final_sales_all['實收保費'].iloc[x] >= 24000:
            final_sales_all['舉績件數'].iloc[x] = final_sales_all['業佣佔率'].iloc[x]
        elif final_sales_all['實收保費'].iloc[x] > 0:
            final_sales_all['舉績件數'].iloc[x] =  final_sales_all['業佣佔率'].iloc[x] * 0.25 
        else:
            final_sales_all['舉績件數'].iloc[x] =  0  
    if final_sales_all['是否為呵護公教'].iloc[x] == True:
        final_sales_all['是否為呵護公教'].iloc[x] ='是呵護'
    else:
        final_sales_all['是否為呵護公教'].iloc[x] ='否'
    #if final_sales_all['作帳工作月(西元)'].iloc[x] == 當工月份:
    #    final_sales_all['是否核實'].iloc[x] = '當工'
    if final_sales_all['發放工作月'].iloc[x] != 0:
        final_sales_all['是否核實'].iloc[x] = '已核實'
    elif final_sales_all['發放工作月'].iloc[x] == 0:
        final_sales_all['是否核實'].iloc[x] = '未核實'
#銀行轄區、其他由0取代為其他
final_sales_all['單位中文_3碼'] = final_sales_all['單位中文_3碼'].replace(0,'其他')
final_sales_all['專展區域_2碼'] = final_sales_all['專展區域_2碼'].replace(0,'其他')
final_sales_all['單位代號_7碼'] = final_sales_all['單位代號_7碼'].replace(0,'其他')
final_sales_all['區部中文_4碼'] = final_sales_all['區部中文_4碼'].replace(0,'其他')
final_sales_all['單位代號_3碼'] = final_sales_all['單位代號_3碼'].replace(0,'其他')
final_sales_all['團營單位_2碼'] = final_sales_all['團營單位_2碼'].replace(0,'其他')
final_sales_all['舉績_輔導經理'] = final_sales_all['舉績_輔導經理'].replace(0,'其他')
#final_sales_all.drop(['作帳工作月(西元)'],axis = 1,inplace = True)
#匯出excel
final_sales_all.to_excel('final_sales績效明細.xlsx',index = False)
print('匯出final_sales績效明細')

#績效明細表製作完成
print('績效明細表製作完成')
progress.update(1)

# ### 製作工作月績效


###############################################################################################
                                       #製作單位核實績效
#製作單位績效表
def 計算單位績效(data2,篩選初續,篩選核實,篩選商品,篩選補件,欄位名):
    data2 = data2[np.logical_and(data2['發放工作月'] >=起始工作月,data2['發放工作月'] <=結束工作月)]
    data2 = data2[np.logical_and(np.logical_and(np.logical_and(
                                                 data2[重出單判斷[輸入重出單判斷]] == 篩選初續,
                                                 data2['是否核實'] == 篩選核實),
                                                 data2['商品大類'] == 篩選商品),
                                                 data2['補件'] == 篩選補件
                                                                  )]
    data2 = data2.groupby(['單位代號_7碼']).sum()[['FYP加成後']]
    data2 = data2.reset_index()
    data2.columns = ['單位代號_7碼', 欄位名]
    return data2

套裝初核實 = 計算單位績效(final_sales_all,'首年','已核實','套裝件','原資料','套裝初')
輔導初核實 = 計算單位績效(final_sales_all,'首年','已核實','一般件','原資料','輔導初')
套裝續核實 = 計算單位績效(final_sales_all,'續年','已核實','套裝件','原資料','套裝續')
輔導續核實 = 計算單位績效(final_sales_all,'續年','已核實','一般件','原資料','輔導續')

#串接資料
單位績效 = 套裝初核實
for i in ([輔導初核實,套裝續核實,輔導續核實]):
    單位績效 = 單位績效.merge(i,how = 'outer',on = '單位代號_7碼')

單位績效 = 單位績效.fillna(0)
單位績效['續保件'] = 單位績效['套裝續'] + 單位績效['輔導續']
單位績效['總績效'] = 單位績效['套裝初'] + 單位績效['輔導初'] + 單位績效['續保件']
單位績效 = 單位績效.drop(['套裝續','輔導續'],axis = 1)
#單位績效表製作完成

#製作單位責任額表
責任額 = pd.read_excel('責任額.xlsx')
責任額 = 責任額[責任額['制度1'] == '通訊處']
年度責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=((今年西元年-1)*100+13),責任額['VRFY_WKYM'] <=(今年西元年*100+12))]
年度責任額 = 年度責任額[['DIV_NO','商品類別','VALUE']]
責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=起始工作月,責任額['VRFY_WKYM'] <=結束工作月)]
責任額 = 責任額[['單位簡稱','區部_4碼','DIV_NO','商品類別','VALUE']]

def 計算責任額(data3, 篩選商品,欄位名):
    data3 = data3[data3['商品類別'] == 篩選商品]
    data3 = data3.drop('商品類別',axis = 1)
    data3 = data3.groupby(['DIV_NO']).sum()
    data3 = data3.reset_index()
    data3.columns = ['單位代號_7碼', 欄位名]
    return data3
套裝初責任額 = 計算責任額(責任額,'套裝初','套裝初責任額')
套裝續責任額 = 計算責任額(責任額,'套裝續','套裝續責任額')
輔導初責任額 = 計算責任額(責任額,'輔導初','輔導初責任額')
輔導續責任額 = 計算責任額(責任額,'輔導續','輔導續責任額')

#串接資料
單位責任額 = 套裝初責任額
for i in ([輔導初責任額,套裝續責任額,輔導續責任額]):
    單位責任額 = 單位責任額.merge(i,how = 'outer',on = '單位代號_7碼')
單位責任額 = 單位責任額.fillna(0)
單位責任額['續保責任額'] = 單位責任額['套裝續責任額'] + 單位責任額['輔導續責任額']
單位責任額['總責任額'] = 單位責任額['套裝初責任額'] + 單位責任額['輔導初責任額'] + 單位責任額['續保責任額']
#單位責任額表製作完成

#製作單位年度責任額表
def 計算年度責任額(data5, 篩選商品,欄位名):
    data5 = data5[data5['商品類別'] == 篩選商品]
    data5 = data5.drop('商品類別',axis = 1)
    data5 = data5.groupby(['DIV_NO']).sum()
    data5 = data5.reset_index()
    data5.columns = ['單位代號_7碼', 欄位名]
    return data5
套裝初_年度責任額 = 計算年度責任額(年度責任額, '套裝初','套裝初_年度責任額')
輔導初_年度責任額 = 計算年度責任額(年度責任額, '輔導初','輔導初_年度責任額')
套裝續_年度責任額 = 計算年度責任額(年度責任額, '套裝續','套裝續_年度責任額')
輔導續_年度責任額 = 計算年度責任額(年度責任額, '輔導續','輔導續_年度責任額')

單位年度責任額 = 套裝初_年度責任額.merge(輔導初_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.merge(套裝續_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.merge(輔導續_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.fillna(0)
單位年度責任額['年度續保責任額'] = 單位年度責任額['套裝續_年度責任額'] + 單位年度責任額['輔導續_年度責任額']
單位年度責任額['年度總責任額'] = 單位年度責任額['套裝初_年度責任額'] + 單位年度責任額['輔導初_年度責任額'] + 單位年度責任額['年度續保責任額'] 
單位年度責任額 = 單位年度責任額.drop(['套裝續_年度責任額','輔導續_年度責任額'],axis=1)
#單位年度責任額表製作完成

#製作單位達成率表
單位達成率 = 單位績效.merge(單位責任額,how = 'outer',on = '單位代號_7碼')
單位達成率['套裝初'] = 單位達成率['套裝初'] / 10000
單位達成率['輔導初'] = 單位達成率['輔導初'] / 10000
單位達成率['續保件'] = 單位達成率['續保件'] / 10000
單位達成率['總績效'] = 單位達成率['總績效'] / 10000
單位達成率 = 單位達成率[['單位代號_7碼','套裝初責任額','輔導初責任額','續保責任額','總責任額',
               '套裝初','輔導初','續保件','總績效']]
單位達成率['套裝初達成率(%)'] = 單位達成率['套裝初'] / 單位達成率['套裝初責任額'] * 100
單位達成率['輔導初達成率(%)'] = 單位達成率['輔導初'] / 單位達成率['輔導初責任額'] * 100
單位達成率['續保件達成率(%)'] = 單位達成率['續保件'] / 單位達成率['續保責任額'] * 100
單位達成率['總達成率(%)'] = 單位達成率['總績效'] / 單位達成率['總責任額'] * 100
單位達成率 = 單位達成率.fillna(0)
#單位達成率表製作完成

#製作單位件數表
def 計算件數(data4,篩選商品,篩選補件,篩選呵護,欄位名):
    data4 = data4[np.logical_and(np.logical_and(np.logical_and(np.logical_and(np.logical_and(
                                   data4['發放工作月'] >=起始工作月,
                                   data4['發放工作月'] <=結束工作月),
                                   data4[重出單判斷[輸入重出單判斷]] == '首年'),
                                   data4['商品大類'] == 篩選商品),
                                   data4['補件'] == 篩選補件),
                                   data4['是否為呵護公教'] == 篩選呵護)]
    data4 = data4[['單位代號_7碼','舉績件數']]
    data4 = data4.groupby(['單位代號_7碼']).sum().reset_index()
    data4[欄位名] = data4['舉績件數']
    data4 = data4.drop(['舉績件數'],axis = 1)
    return data4
#如未來呵護調整為原資料，此處下方修改其他件為原資料
套裝件數 = 計算件數(final_sales_all,'套裝件','原資料','否','套裝件數')
輔導件數 = 計算件數(final_sales_all,'一般件','原資料','否','輔導件數')
呵護件數 = 計算件數(final_sales_all,'套裝件','其他件','是呵護','呵護件數')
其他件件數 = 計算件數(final_sales_all,'套裝件','其他件','否','其他件件數')
#串接資料
單位件數 = 套裝件數.merge(輔導件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.merge(呵護件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.merge(其他件件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.fillna(0)
#單位件數表製作完成

#製作單位核實績效表
單位核實績效 = 單位件數.merge(單位達成率,how = 'outer',on = '單位代號_7碼')
單位核實績效 = 單位核實績效.merge(單位年度責任額,how = 'outer',on = '單位代號_7碼')
單位核實績效['套裝初年度進展率(%)'] = 單位核實績效['套裝初'] / 單位核實績效['套裝初_年度責任額'] * 100
單位核實績效['輔導初年度進展率(%)'] = 單位核實績效['輔導初'] / 單位核實績效['輔導初_年度責任額'] * 100
單位核實績效['續年度進展率(%)'] = 單位核實績效['續保件'] / 單位核實績效['年度續保責任額'] * 100
單位核實績效['總保費年度進展率(%)'] = 單位核實績效['總績效'] / 單位核實績效['年度總責任額'] * 100
#串接轄區表(單位、區部、輔導經理中文)
轄區表 = pd.read_excel('轄區表.xlsx')
轄區表['單位代號_7碼'] = 轄區表['代號']+['0000']
轄區表 = 轄區表[['單位代號_7碼','區部','輔導經理','單位']]
轄區表['區部'] = 轄區表['區部'].str[0]+轄區表['區部'].str[2:]
單位核實績效 = 單位核實績效.merge(轄區表,how='right',on = '單位代號_7碼')
單位核實績效  = 單位核實績效.fillna(0)

#排序欄位順序
單位核實績效 = 單位核實績效[['區部','單位','單位代號_7碼','套裝件數','輔導件數', '呵護件數', '其他件件數', '套裝初責任額', '輔導初責任額', '續保責任額',
       '總責任額', '套裝初', '輔導初', '續保件', '總績效','輔導經理', '套裝初達成率(%)', '輔導初達成率(%)','續保件達成率(%)', '總達成率(%)',
      '套裝初年度進展率(%)', '輔導初年度進展率(%)', '續年度進展率(%)', '總保費年度進展率(%)',
      '套裝初_年度責任額', '輔導初_年度責任額', '年度續保責任額', '年度總責任額']]
#篩選不是「其他」
單位核實績效 = 單位核實績效[單位核實績效['單位代號_7碼'] != '其他']
#依單位代號排序
單位核實績效.sort_values(['單位代號_7碼'],inplace=True)
#單位核實績效表製作完成
print('單位核實績效表製作完成')
progress.update(1)


###############################################################################################
                                       #製作區部核實績效
#製作區部核實績效表
#以單位績效加總
區部核實績效 = 單位核實績效[['區部','套裝件數','輔導件數','呵護件數'
                ,'其他件件數','套裝初責任額','輔導初責任額','續保責任額'
               ,'總責任額','套裝初','輔導初','續保件','總績效'
                ,'套裝初_年度責任額','輔導初_年度責任額','年度續保責任額'
               ,'年度總責任額']]
區部核實績效 = 區部核實績效.groupby('區部').sum()
區部核實績效['套裝初達成率(%)'] = 區部核實績效['套裝初'] / 區部核實績效['套裝初責任額'] * 100
區部核實績效['輔導初達成率(%)'] = 區部核實績效['輔導初'] / 區部核實績效['輔導初責任額'] * 100
區部核實績效['續保件達成率(%)'] = 區部核實績效['續保件'] / 區部核實績效['續保責任額'] * 100
區部核實績效['總達成率(%)'] = 區部核實績效['總績效'] / 區部核實績效['總責任額'] * 100
區部核實績效['套裝初年度進展率(%)'] = 區部核實績效['套裝初'] / 區部核實績效['套裝初_年度責任額'] * 100
區部核實績效['輔導初年度進展率(%)'] = 區部核實績效['輔導初'] / 區部核實績效['輔導初_年度責任額'] * 100
區部核實績效['續年度進展率(%)'] = 區部核實績效['續保件'] / 區部核實績效['年度續保責任額'] * 100
區部核實績效['總保費年度進展率(%)'] = 區部核實績效['總績效'] / 區部核實績效['年度總責任額'] * 100
#排序欄位順序
columns = list(區部核實績效.columns[:12]) + list(區部核實績效.columns[16:20]) + list(區部核實績效.columns[20:]) + list(區部核實績效.columns[12:16])
區部核實績效 = 區部核實績效[columns]
#排序區部順序
l = ['展北一區','展北二區','展北三區','展東台區','展桃園區',
'展新竹區','專北一區','專北二區','專桃竹區','專桃園區',
'展中部區','展台中區','展台南區','展高屏區','展高雄區',
'展嘉雲區','專台中區','專台南區','專高一區']
區部核實績效['區部_'] = 區部核實績效.index
區部核實績效['區部_'] = 區部核實績效['區部_'].astype('category')
區部核實績效['區部_'].cat.reorder_categories(l,inplace=True)
區部核實績效.sort_values('區部_',inplace=True)
區部核實績效.drop(['區部_'],axis = 1,inplace=True)
print('區部核實績效表製作完成')
progress.update(1)

########################################################################################
                            #製作單位速報績效
#製作單位績效表
def 計算單位績效(data2,篩選初續,篩選核實,篩選商品,篩選補件,欄位名):
    data2 = data2[np.logical_and(data2['作帳工作月(西元)'] >=速報起始工作月,data2['作帳工作月(西元)'] <=速報結束工作月)]
    data2 = data2[np.logical_and(np.logical_and(np.logical_and(
                                                 data2[重出單判斷[輸入重出單判斷]] == 篩選初續,
                                                 data2['是否核實'] == 篩選核實),
                                                 data2['商品大類'] == 篩選商品),
                                                 data2['補件'] == 篩選補件
                                                                  )]
    data2 = data2.groupby(['單位代號_7碼']).sum()[['FYP加成後']]
    data2 = data2.reset_index()
    data2.columns = ['單位代號_7碼', 欄位名]
    return data2
套裝初速報 = 計算單位績效(final_sales_all,'首年','未核實','套裝件','原資料','套裝初')
輔導初速報 = 計算單位績效(final_sales_all,'首年','未核實','一般件','原資料','輔導初')
套裝續速報 = 計算單位績效(final_sales_all,'續年','未核實','套裝件','原資料','套裝續')
輔導續速報 = 計算單位績效(final_sales_all,'續年','未核實','一般件','原資料','輔導續')
#串接資料
單位績效 = 套裝初速報
for i in ([輔導初速報,套裝續速報,輔導續速報]):
    單位績效 = 單位績效.merge(i,how = 'outer',on = '單位代號_7碼')
單位績效 = 單位績效.fillna(0)
單位績效['續保件'] = 單位績效['套裝續'] + 單位績效['輔導續']
單位績效['總績效'] = 單位績效['套裝初'] + 單位績效['輔導初'] + 單位績效['續保件']
單位績效 = 單位績效.drop(['套裝續','輔導續'],axis = 1)
#單位績效表製作完成

#製作單位責任額表
責任額 = pd.read_excel('責任額.xlsx')
責任額 = 責任額[責任額['制度1'] == '通訊處']
年度責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=((今年西元年-1)*100+13),責任額['VRFY_WKYM'] <=(今年西元年*100+12))]
年度責任額 = 年度責任額[['DIV_NO','商品類別','VALUE']]
責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=速報起始工作月,責任額['VRFY_WKYM'] <=速報結束工作月)]
責任額 = 責任額[['單位簡稱','區部_4碼','DIV_NO','商品類別','VALUE']]

def 計算責任額(data3, 篩選商品,欄位名):
    data3 = data3[data3['商品類別'] == 篩選商品]
    data3 = data3.drop('商品類別',axis = 1)
    data3 = data3.groupby(['DIV_NO']).sum()
    data3 = data3.reset_index()
    data3.columns = ['單位代號_7碼', 欄位名]
    return data3
套裝初責任額 = 計算責任額(責任額,'套裝初','套裝初責任額')
套裝續責任額 = 計算責任額(責任額,'套裝續','套裝續責任額')
輔導初責任額 = 計算責任額(責任額,'輔導初','輔導初責任額')
輔導續責任額 = 計算責任額(責任額,'輔導續','輔導續責任額')

#串接資料
單位責任額 = 套裝初責任額
for i in ([輔導初責任額,套裝續責任額,輔導續責任額]):
    單位責任額 = 單位責任額.merge(i,how = 'outer',on = '單位代號_7碼')
單位責任額 = 單位責任額.fillna(0)
單位責任額['續保責任額'] = 單位責任額['套裝續責任額'] + 單位責任額['輔導續責任額']
單位責任額['總責任額'] = 單位責任額['套裝初責任額'] + 單位責任額['輔導初責任額'] + 單位責任額['續保責任額']
#單位責任額表製作完成

#製作單位年度責任額表
def 計算年度責任額(data5, 篩選商品,欄位名):
    data5 = data5[data5['商品類別'] == 篩選商品]
    data5 = data5.drop('商品類別',axis = 1)
    data5 = data5.groupby(['DIV_NO']).sum()
    data5 = data5.reset_index()
    data5.columns = ['單位代號_7碼', 欄位名]
    return data5
套裝初_年度責任額 = 計算年度責任額(年度責任額, '套裝初','套裝初_年度責任額')
輔導初_年度責任額 = 計算年度責任額(年度責任額, '輔導初','輔導初_年度責任額')
套裝續_年度責任額 = 計算年度責任額(年度責任額, '套裝續','套裝續_年度責任額')
輔導續_年度責任額 = 計算年度責任額(年度責任額, '輔導續','輔導續_年度責任額')
單位年度責任額 = 套裝初_年度責任額.merge(輔導初_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.merge(套裝續_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.merge(輔導續_年度責任額,how = 'outer',on = '單位代號_7碼')
單位年度責任額 = 單位年度責任額.fillna(0)
單位年度責任額['年度續保責任額'] = 單位年度責任額['套裝續_年度責任額'] + 單位年度責任額['輔導續_年度責任額']
單位年度責任額['年度總責任額'] = 單位年度責任額['套裝初_年度責任額'] + 單位年度責任額['輔導初_年度責任額'] + 單位年度責任額['年度續保責任額'] 
單位年度責任額 = 單位年度責任額.drop(['套裝續_年度責任額','輔導續_年度責任額'],axis=1)
#單位年度責任額表製作完成

#製作單位達成率表
單位達成率 = 單位績效.merge(單位責任額,how = 'outer',on = '單位代號_7碼')
單位達成率['套裝初'] = 單位達成率['套裝初'] / 10000
單位達成率['輔導初'] = 單位達成率['輔導初'] / 10000
單位達成率['續保件'] = 單位達成率['續保件'] / 10000
單位達成率['總績效'] = 單位達成率['總績效'] / 10000
單位達成率 = 單位達成率[['單位代號_7碼','套裝初責任額','輔導初責任額','續保責任額','總責任額',
               '套裝初','輔導初','續保件','總績效']]
單位達成率['套裝初達成率(%)'] = 單位達成率['套裝初'] / 單位達成率['套裝初責任額'] * 100
單位達成率['輔導初達成率(%)'] = 單位達成率['輔導初'] / 單位達成率['輔導初責任額'] * 100
單位達成率['續保件達成率(%)'] = 單位達成率['續保件'] / 單位達成率['續保責任額'] * 100
單位達成率['總達成率(%)'] = 單位達成率['總績效'] / 單位達成率['總責任額'] * 100
單位達成率 = 單位達成率.fillna(0)
#單位達成率表製作完成

#製作單位件數表
def 計算件數(data4,篩選商品,篩選補件,篩選呵護,欄位名):
    data4 = data4[np.logical_and(data4['作帳工作月(西元)'] >=速報起始工作月,data4['作帳工作月(西元)'] <=速報結束工作月)]
    data4 = data4[np.logical_and(np.logical_and(np.logical_and(np.logical_and(
                                   data4['是否核實'] == '未核實',
                                   data4[重出單判斷[輸入重出單判斷]] == '首年'),
                                   data4['商品大類'] == 篩選商品),
                                   data4['補件'] == 篩選補件),
                                   data4['是否為呵護公教'] == 篩選呵護)]
    data4 = data4[['單位代號_7碼','舉績件數']]
    data4 = data4.groupby(['單位代號_7碼']).sum().reset_index()
    data4[欄位名] = data4['舉績件數']
    data4 = data4.drop(['舉績件數'],axis = 1)
    return data4
#如未來呵護調整為原資料，此處下方修改其他件為原資料
套裝件數 = 計算件數(final_sales_all,'套裝件','原資料','否','套裝件數')
輔導件數 = 計算件數(final_sales_all,'一般件','原資料','否','輔導件數')
呵護件數 = 計算件數(final_sales_all,'套裝件','其他件','是呵護','呵護件數')
其他件件數 = 計算件數(final_sales_all,'套裝件','其他件','否','其他件件數')
#串接資料
單位件數 = 套裝件數.merge(輔導件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.merge(呵護件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.merge(其他件件數,how = 'outer',on = '單位代號_7碼')
單位件數 = 單位件數.fillna(0)
#單位件數表製作完成

#製作單位速報績效表
單位速報績效 = 單位件數.merge(單位達成率,how = 'outer',on = '單位代號_7碼')
單位速報績效 = 單位速報績效.merge(單位年度責任額,how = 'outer',on = '單位代號_7碼')
單位速報績效['套裝初年度進展率(%)'] = 單位速報績效['套裝初'] / 單位速報績效['套裝初_年度責任額'] * 100
單位速報績效['輔導初年度進展率(%)'] = 單位速報績效['輔導初'] / 單位速報績效['輔導初_年度責任額'] * 100
單位速報績效['續年度進展率(%)'] = 單位速報績效['續保件'] / 單位速報績效['年度續保責任額'] * 100
單位速報績效['總保費年度進展率(%)'] = 單位速報績效['總績效'] / 單位速報績效['年度總責任額'] * 100
#串接轄區表(單位、區部、輔導經理中文)
轄區表 = pd.read_excel('轄區表.xlsx')
轄區表['單位代號_7碼'] = 轄區表['代號']+['0000']
轄區表 = 轄區表[['單位代號_7碼','區部','輔導經理','單位']]
轄區表['區部'] = 轄區表['區部'].str[0]+轄區表['區部'].str[2:]
單位速報績效 = 單位速報績效.merge(轄區表,how='right',on = '單位代號_7碼')
單位速報績效  = 單位速報績效.fillna(0)
#排序欄位順序
單位速報績效 = 單位速報績效[['區部','單位','單位代號_7碼','套裝件數','輔導件數', '呵護件數', '其他件件數', '套裝初責任額', '輔導初責任額', '續保責任額',
       '總責任額', '套裝初', '輔導初', '續保件', '總績效','輔導經理', '套裝初達成率(%)', '輔導初達成率(%)','續保件達成率(%)', '總達成率(%)',
      '套裝初年度進展率(%)', '輔導初年度進展率(%)', '續年度進展率(%)', '總保費年度進展率(%)',
      '套裝初_年度責任額', '輔導初_年度責任額', '年度續保責任額', '年度總責任額']]
#篩選不是「其他」
單位速報績效 = 單位速報績效[單位速報績效['單位代號_7碼'] != '其他']
#依單位代號排序
單位速報績效.sort_values(['單位代號_7碼'],inplace=True)

#單位速報績效表製作完成

print('單位速報績效表製作完成')
progress.update(1)

########################################################################################
                            #製作區部速報績效
#製作區部速報績效表
區部速報績效 = 單位速報績效[['區部','套裝件數','輔導件數','呵護件數'
                ,'其他件件數','套裝初責任額','輔導初責任額','續保責任額'
               ,'總責任額','套裝初','輔導初','續保件','總績效'
                ,'套裝初_年度責任額','輔導初_年度責任額','年度續保責任額'
               ,'年度總責任額']]
區部速報績效 = 區部速報績效.groupby('區部').sum()
區部速報績效['套裝初達成率(%)'] = 區部速報績效['套裝初'] / 區部速報績效['套裝初責任額'] * 100
區部速報績效['輔導初達成率(%)'] = 區部速報績效['輔導初'] / 區部速報績效['輔導初責任額'] * 100
區部速報績效['續保件達成率(%)'] = 區部速報績效['續保件'] / 區部速報績效['續保責任額'] * 100
區部速報績效['總達成率(%)'] = 區部速報績效['總績效'] / 區部速報績效['總責任額'] * 100
區部速報績效['套裝初年度進展率(%)'] = 區部速報績效['套裝初'] / 區部速報績效['套裝初_年度責任額'] * 100
區部速報績效['輔導初年度進展率(%)'] = 區部速報績效['輔導初'] / 區部速報績效['輔導初_年度責任額'] * 100
區部速報績效['續年度進展率(%)'] = 區部速報績效['續保件'] / 區部速報績效['年度續保責任額'] * 100
區部速報績效['總保費年度進展率(%)'] = 區部速報績效['總績效'] / 區部速報績效['年度總責任額'] * 100
#排序欄位順序
columns = list(區部速報績效.columns[:12]) + list(區部速報績效.columns[16:20]) + list(區部速報績效.columns[20:]) + list(區部速報績效.columns[12:16])
區部速報績效 = 區部速報績效[columns]
#排序區部順序
l = ['展北一區','展北二區','展北三區','展東台區','展桃園區',
'展新竹區','專北一區','專北二區','專桃竹區','專桃園區',
'展中部區','展台中區','展台南區','展高屏區','展高雄區',
'展嘉雲區','專台中區','專台南區','專高一區']
區部速報績效['區部_'] = 區部速報績效.index
區部速報績效['區部_'] = 區部速報績效['區部_'].astype('category')
區部速報績效['區部_'].cat.reorder_categories(l,inplace=True)
區部速報績效.sort_values('區部_',inplace=True)
區部速報績效.drop(['區部_'],axis = 1,inplace=True)
print('區部速報績效製作完成')
progress.update(1)
########################################################################################
                            #製作單位舉績率
#製作單位舉績表
單位舉績 = final_sales_all[final_sales_all['商品別_中文'].isin(舉績率商品)]
單位核實舉績 = 單位舉績[np.logical_and(np.logical_and(np.logical_and(np.logical_and(單位舉績['是否核實'] == '已核實'
                    ,單位舉績['繳次'] == '首期'),單位舉績[重出單判斷[輸入重出單判斷]] == '首年')
                    ,單位舉績['發放工作月'] >=起始工作月),單位舉績['發放工作月'] <=結束工作月)]
單位速報舉績 = 單位舉績[np.logical_and(單位舉績['作帳工作月(西元)'] >=速報起始工作月,單位舉績['作帳工作月(西元)'] <=速報結束工作月)]
單位速報舉績 = 單位速報舉績[np.logical_and(np.logical_and(單位舉績['是否核實'] == '未核實'
                      ,單位舉績['繳次'] == '首期'),單位舉績[重出單判斷[輸入重出單判斷]] == '首年')]

單位核實及速報舉績 = pd.concat([單位核實舉績,單位速報舉績])

def 計算舉績人數(data6,欄位名稱):
    data6 = data6[['單位代號_7碼','SAS_ID']].drop_duplicates()
    data6 = data6.groupby('單位代號_7碼').count()
    data6 = data6.reset_index()
    data6.columns = ['單位代號_7碼',欄位名稱]
    return data6
單位核實舉績 = 計算舉績人數(單位核實舉績,'已核實舉績人數')
單位速報舉績 = 計算舉績人數(單位速報舉績,'速報舉績人數')
單位核實及速報舉績 = 計算舉績人數(單位核實及速報舉績,'總舉績人數(移除重複)')
單位舉績 = 單位核實舉績.merge(單位速報舉績,how='outer',on='單位代號_7碼')
單位舉績 = 單位舉績.merge(單位核實及速報舉績,how='outer',on='單位代號_7碼')
單位舉績 = 單位舉績.fillna(0)

單位人數 = pd.read_excel('單位人數.xlsx')
單位舉績 = 單位舉績.merge(單位人數,how='outer',on='單位代號_7碼')
單位舉績['已核實舉績率(%)'] = 單位舉績['已核實舉績人數'] / 單位舉績['核實平均單位人數'] * 100
單位舉績['速報舉績率(%)'] = 單位舉績['速報舉績人數'] / 單位舉績['速報平均單位人數'] * 100
單位舉績['總舉績率(%)'] = 單位舉績['總舉績人數(移除重複)'] / 單位舉績['累計平均單位人數'] * 100
單位舉績 = 單位舉績.merge(轄區表,how = 'right',on='單位代號_7碼')
單位舉績['目標'] = 單位舉績['累計平均單位人數'] * 舉績率目標


單位舉績 = 單位舉績.fillna(0)
單位舉績['差額人數'] = 單位舉績['總舉績人數(移除重複)'] - 單位舉績['目標']
單位舉績 = 單位舉績[['區部','單位','單位代號_7碼','核實平均單位人數','速報平均單位人數','累計平均單位人數',
             '已核實舉績人數','速報舉績人數','總舉績人數(移除重複)','已核實舉績率(%)',
             '速報舉績率(%)','總舉績率(%)','目標','差額人數']]
#依單位代號排序
單位舉績.sort_values(['單位代號_7碼'],inplace=True)
#單位舉績表製作完成
print('單位舉績表製作完成')
progress.update(1)

########################################################################################
                            #製作區部舉績率
#製作區部舉績表
區部舉績 = final_sales_all[final_sales_all['商品別_中文'].isin(舉績率商品)]
區部核實舉績 = 區部舉績[np.logical_and(np.logical_and(np.logical_and(np.logical_and(區部舉績['是否核實'] == '已核實'
                    ,區部舉績['繳次'] == '首期'),區部舉績[重出單判斷[輸入重出單判斷]] == '首年')
                    ,區部舉績['發放工作月'] >=起始工作月),區部舉績['發放工作月'] <=結束工作月)]
區部速報舉績 = 區部舉績[np.logical_and(區部舉績['作帳工作月(西元)'] >=速報起始工作月,區部舉績['作帳工作月(西元)'] <=速報結束工作月)]
區部速報舉績 = 區部速報舉績[np.logical_and(np.logical_and(區部舉績['是否核實'] == '未核實'
                      ,區部舉績['繳次'] == '首期'),區部舉績[重出單判斷[輸入重出單判斷]] == '首年')]
區部核實及速報舉績 = pd.concat([區部核實舉績,區部速報舉績])

def 計算舉績人數(data7,欄位名稱):
    data7 = data7[['區部中文_4碼','SAS_ID']].drop_duplicates()
    data7 = data7.groupby('區部中文_4碼').count()
    data7 = data7.reset_index()
    data7.columns = ['區部中文_4碼',欄位名稱]
    return data7
區部核實舉績 = 計算舉績人數(區部核實舉績,'已核實舉績人數')
區部速報舉績 = 計算舉績人數(區部速報舉績,'速報舉績人數')
區部核實及速報舉績 = 計算舉績人數(區部核實及速報舉績,'總舉績人數(移除重複)')
區部舉績 = 區部核實舉績.merge(區部速報舉績,how='outer',on='區部中文_4碼')
區部舉績 = 區部舉績.merge(區部核實及速報舉績,how='outer',on='區部中文_4碼')
區部舉績 = 區部舉績.fillna(0)
區部人數 = 單位人數.merge(轄區表,how='right',on='單位代號_7碼')
區部人數 = 區部人數.groupby('區部').sum()
區部人數.reset_index(inplace = True)
區部舉績 = 區部舉績.merge(區部人數,how='outer',right_on= '區部',left_on ='區部中文_4碼')
區部舉績['已核實舉績率(%)'] = 區部舉績['已核實舉績人數'] / 區部舉績['核實平均單位人數'] * 100
區部舉績['速報舉績率(%)'] = 區部舉績['速報舉績人數'] / 區部舉績['速報平均單位人數'] * 100
區部舉績['總舉績率(%)'] = 區部舉績['總舉績人數(移除重複)'] / 區部舉績['累計平均單位人數'] * 100
區部舉績.drop(['區部中文_4碼'],axis=1,inplace=True)
區部舉績['目標'] = 區部舉績['累計平均單位人數'] * 舉績率目標
區部舉績['差額人數'] = 區部舉績['總舉績人數(移除重複)'] - 區部舉績['目標']
區部舉績 = 區部舉績[['區部','核實平均單位人數','速報平均單位人數','累計平均單位人數',
             '已核實舉績人數','速報舉績人數','總舉績人數(移除重複)','已核實舉績率(%)',
             '速報舉績率(%)','總舉績率(%)','目標','差額人數']]


#排序區部順序
l = ['展北一區','展北二區','展北三區','展東台區','展桃園區',
'展新竹區','專北一區','專北二區','專桃竹區','專桃園區',
'展中部區','展台中區','展台南區','展高屏區','展高雄區',
'展嘉雲區','專台中區','專台南區','專高一區']
區部舉績['區部'] = 區部舉績['區部'].astype('category')
區部舉績['區部'].cat.reorder_categories(l,inplace=True)
區部舉績.sort_values('區部',inplace=True)
#區部舉績表製作完成
print('區部舉績表製作完成')
progress.update(1)


###############################################################################################
                                       #製作展業課核實績效
#製作展業課績效表
def 計算單位績效(data2,篩選初續,篩選核實,篩選商品,篩選補件,欄位名):
    data2 = data2[np.logical_and(data2['發放工作月'] >=起始工作月,data2['發放工作月'] <=結束工作月)]
    data2 = data2[np.logical_and(np.logical_and(np.logical_and(
                                                 data2[重出單判斷[輸入重出單判斷]] == 篩選初續,
                                                 data2['是否核實'] == 篩選核實),
                                                 data2['商品大類'] == 篩選商品),
                                                 data2['補件'] == 篩選補件
                                                                  )]
    data2 = data2.groupby(['展業課代號']).sum()[['FYP加成後']]
    data2 = data2.reset_index()
    data2.columns = ['展業課代號', 欄位名]
    return data2

套裝初核實 = 計算單位績效(final_sales_all,'首年','已核實','套裝件','原資料','套裝初')
輔導初核實 = 計算單位績效(final_sales_all,'首年','已核實','一般件','原資料','輔導初')
套裝續核實 = 計算單位績效(final_sales_all,'續年','已核實','套裝件','原資料','套裝續')
輔導續核實 = 計算單位績效(final_sales_all,'續年','已核實','一般件','原資料','輔導續')

#串接資料
展業課績效 = 套裝初核實
for i in ([輔導初核實,套裝續核實,輔導續核實]):
    展業課績效 = 展業課績效.merge(i,how = 'outer',on = '展業課代號')
    


展業課績效 = 展業課績效.fillna(0)
展業課績效['續保件'] = 展業課績效['套裝續'] + 展業課績效['輔導續']
展業課績效['總績效'] = 展業課績效['套裝初'] + 展業課績效['輔導初'] + 展業課績效['續保件']
展業課績效 = 展業課績效.drop(['套裝續','輔導續'],axis = 1)
#展業課績效表製作完成

#製作展業課責任額表
責任額 = pd.read_excel('責任額.xlsx')
責任額 = 責任額[責任額['制度1'] == '展業課']
責任額['展業課代號'] = 責任額['DIV_NO'].str[:4]
年度責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=((今年西元年-1)*100+13),責任額['VRFY_WKYM'] <=(今年西元年*100+12))]
年度責任額 = 年度責任額[['展業課代號','商品類別','VALUE']]
責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=起始工作月,責任額['VRFY_WKYM'] <=結束工作月)]
責任額 = 責任額[['展業課代號','商品類別','VALUE']]


def 計算責任額(data3, 篩選商品,欄位名):
    data3 = data3[data3['商品類別'] == 篩選商品]
    data3 = data3.drop('商品類別',axis = 1)
    data3 = data3.groupby(['展業課代號']).sum()
    data3 = data3.reset_index()
    data3.columns = ['展業課代號', 欄位名]
    return data3
套裝初責任額 = 計算責任額(責任額,'套裝初','套裝初責任額')
套裝續責任額 = 計算責任額(責任額,'套裝續','套裝續責任額')
輔導初責任額 = 計算責任額(責任額,'輔導初','輔導初責任額')
輔導續責任額 = 計算責任額(責任額,'輔導續','輔導續責任額')

#串接資料
展業課責任額 = 套裝初責任額
for i in ([輔導初責任額,套裝續責任額,輔導續責任額]):
    展業課責任額 = 展業課責任額.merge(i,how = 'outer',on = '展業課代號')
展業課責任額 = 展業課責任額.fillna(0)
展業課責任額['續保責任額'] = 展業課責任額['套裝續責任額'] + 展業課責任額['輔導續責任額']
展業課責任額['總責任額'] = 展業課責任額['套裝初責任額'] + 展業課責任額['輔導初責任額'] + 展業課責任額['續保責任額']
#展業課責任額表製作完成

#製作展業課年度責任額表
def 計算年度責任額(data5, 篩選商品,欄位名):
    data5 = data5[data5['商品類別'] == 篩選商品]
    data5 = data5.drop('商品類別',axis = 1)
    data5 = data5.groupby(['展業課代號']).sum()
    data5 = data5.reset_index()
    data5.columns = ['展業課代號', 欄位名]
    return data5
套裝初_年度責任額 = 計算年度責任額(年度責任額, '套裝初','套裝初_年度責任額')
輔導初_年度責任額 = 計算年度責任額(年度責任額, '輔導初','輔導初_年度責任額')
套裝續_年度責任額 = 計算年度責任額(年度責任額, '套裝續','套裝續_年度責任額')
輔導續_年度責任額 = 計算年度責任額(年度責任額, '輔導續','輔導續_年度責任額')

展業課年度責任額 = 套裝初_年度責任額.merge(輔導初_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.merge(套裝續_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.merge(輔導續_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.fillna(0)
展業課年度責任額['年度續保責任額'] = 展業課年度責任額['套裝續_年度責任額'] + 展業課年度責任額['輔導續_年度責任額']
展業課年度責任額['年度總責任額'] = 展業課年度責任額['套裝初_年度責任額'] + 展業課年度責任額['輔導初_年度責任額'] + 展業課年度責任額['年度續保責任額'] 
展業課年度責任額 = 展業課年度責任額.drop(['套裝續_年度責任額','輔導續_年度責任額'],axis=1)
#展業課年度責任額表製作完成

#製作展業課達成率表
展業課達成率 = 展業課績效.merge(展業課責任額,how = 'outer',on = '展業課代號')
展業課達成率['套裝初'] = 展業課達成率['套裝初'] / 10000
展業課達成率['輔導初'] = 展業課達成率['輔導初'] / 10000
展業課達成率['續保件'] = 展業課達成率['續保件'] / 10000
展業課達成率['總績效'] = 展業課達成率['總績效'] / 10000
展業課達成率 = 展業課達成率[['展業課代號','套裝初責任額','輔導初責任額','續保責任額','總責任額',
               '套裝初','輔導初','續保件','總績效']]
展業課達成率['套裝初達成率(%)'] = 展業課達成率['套裝初'] / 展業課達成率['套裝初責任額'] * 100
展業課達成率['輔導初達成率(%)'] = 展業課達成率['輔導初'] / 展業課達成率['輔導初責任額'] * 100
展業課達成率['續保件達成率(%)'] = 展業課達成率['續保件'] / 展業課達成率['續保責任額'] * 100
展業課達成率['總達成率(%)'] = 展業課達成率['總績效'] / 展業課達成率['總責任額'] * 100
展業課達成率 = 展業課達成率.fillna(0)
#展業課達成率表製作完成

#製作單位件數表
def 計算件數(data4,篩選商品,篩選補件,篩選呵護,欄位名):
    data4 = data4[np.logical_and(np.logical_and(np.logical_and(np.logical_and(np.logical_and(
                                   data4['發放工作月'] >=起始工作月,
                                   data4['發放工作月'] <=結束工作月),
                                   data4[重出單判斷[輸入重出單判斷]] == '首年'),
                                   data4['商品大類'] == 篩選商品),
                                   data4['補件'] == 篩選補件),
                                   data4['是否為呵護公教'] == 篩選呵護)]
    data4 = data4[['展業課代號','舉績件數']]
    data4 = data4.groupby(['展業課代號']).sum().reset_index()
    data4[欄位名] = data4['舉績件數']
    data4 = data4.drop(['舉績件數'],axis = 1)
    return data4
#如未來呵護調整為原資料，此處下方修改其他件為原資料
套裝件數 = 計算件數(final_sales_all,'套裝件','原資料','否','套裝件數')
輔導件數 = 計算件數(final_sales_all,'一般件','原資料','否','輔導件數')
呵護件數 = 計算件數(final_sales_all,'套裝件','其他件','是呵護','呵護件數')
其他件件數 = 計算件數(final_sales_all,'套裝件','其他件','否','其他件件數')
#串接資料
展業課件數 = 套裝件數.merge(輔導件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.merge(呵護件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.merge(其他件件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.fillna(0)
#展業課件數表製作完成

#製作展業課核實績效表
展業課核實績效 = 展業課件數.merge(展業課達成率,how = 'outer',on = '展業課代號')
展業課核實績效 = 展業課核實績效.merge(展業課年度責任額,how = 'outer',on = '展業課代號')
展業課核實績效['套裝初年度進展率(%)'] = 展業課核實績效['套裝初'] / 展業課核實績效['套裝初_年度責任額'] * 100
展業課核實績效['輔導初年度進展率(%)'] = 展業課核實績效['輔導初'] / 展業課核實績效['輔導初_年度責任額'] * 100
展業課核實績效['續年度進展率(%)'] = 展業課核實績效['續保件'] / 展業課核實績效['年度續保責任額'] * 100
展業課核實績效['總保費年度進展率(%)'] = 展業課核實績效['總績效'] / 展業課核實績效['年度總責任額'] * 100
#串接轄區表(展業課、區部、輔導經理中文)
展業課名單 = pd.read_excel('展業課名單.xlsx')
展業課名單 = 展業課名單[['展業課代號','單位簡稱','輔導經理']]
展業課名單.columns = ['展業課代號','展業課名稱','輔導經理']
展業課核實績效 = 展業課核實績效.merge(展業課名單,how='right',on = '展業課代號')
展業課核實績效  = 展業課核實績效.fillna(0)

#排序欄位順序
展業課核實績效 = 展業課核實績效[['展業課名稱','展業課代號','套裝件數','輔導件數', '呵護件數', '其他件件數', '套裝初責任額', '輔導初責任額', '續保責任額',
       '總責任額', '套裝初', '輔導初', '續保件', '總績效','輔導經理', '套裝初達成率(%)', '輔導初達成率(%)','續保件達成率(%)', '總達成率(%)',
      '套裝初年度進展率(%)', '輔導初年度進展率(%)', '續年度進展率(%)', '總保費年度進展率(%)',
      '套裝初_年度責任額', '輔導初_年度責任額', '年度續保責任額', '年度總責任額']]
#篩選不是「其他」
展業課核實績效 = 展業課核實績效[展業課核實績效['展業課代號'] != '其他']
#依展業課代號排序
展業課核實績效.sort_values(['展業課代號'],inplace=True)
#展業課核實績效表製作完成
print('展業課核實績效表製作完成')
progress.update(1)


########################################################################################
                            #製作展業課速報績效
#製作單位績效表
def 計算單位績效(data2,篩選初續,篩選核實,篩選商品,篩選補件,欄位名):
    data2 = data2[np.logical_and(data2['作帳工作月(西元)'] >=速報起始工作月,data2['作帳工作月(西元)'] <=速報結束工作月)]
    data2 = data2[np.logical_and(np.logical_and(np.logical_and(
                                                 data2[重出單判斷[輸入重出單判斷]] == 篩選初續,
                                                 data2['是否核實'] == 篩選核實),
                                                 data2['商品大類'] == 篩選商品),
                                                 data2['補件'] == 篩選補件
                                                                  )]
    data2 = data2.groupby(['展業課代號']).sum()[['FYP加成後']]
    data2 = data2.reset_index()
    data2.columns = ['展業課代號', 欄位名]
    return data2
套裝初速報 = 計算單位績效(final_sales_all,'首年','未核實','套裝件','原資料','套裝初')
輔導初速報 = 計算單位績效(final_sales_all,'首年','未核實','一般件','原資料','輔導初')
套裝續速報 = 計算單位績效(final_sales_all,'續年','未核實','套裝件','原資料','套裝續')
輔導續速報 = 計算單位績效(final_sales_all,'續年','未核實','一般件','原資料','輔導續')
#串接資料
展業課績效 = 套裝初速報
for i in ([輔導初速報,套裝續速報,輔導續速報]):
    展業課績效 = 展業課績效.merge(i,how = 'outer',on = '展業課代號')
展業課績效 = 展業課績效.fillna(0)
展業課績效['續保件'] = 展業課績效['套裝續'] + 展業課績效['輔導續']
展業課績效['總績效'] = 展業課績效['套裝初'] + 展業課績效['輔導初'] + 展業課績效['續保件']
展業課績效 = 展業課績效.drop(['套裝續','輔導續'],axis = 1)
#展業課績效表製作完成

#製作展業課責任額表
責任額 = pd.read_excel('責任額.xlsx')
責任額 = 責任額[責任額['制度1'] == '展業課']
責任額['展業課代號'] = 責任額['DIV_NO'].str[:4]
年度責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=((今年西元年-1)*100+13),責任額['VRFY_WKYM'] <=(今年西元年*100+12))]
年度責任額 = 年度責任額[['展業課代號','商品類別','VALUE']]
責任額 = 責任額[np.logical_and(責任額['VRFY_WKYM'] >=速報起始工作月,責任額['VRFY_WKYM'] <=速報結束工作月)]
責任額 = 責任額[['展業課代號','商品類別','VALUE']]


def 計算責任額(data3, 篩選商品,欄位名):
    data3 = data3[data3['商品類別'] == 篩選商品]
    data3 = data3.drop('商品類別',axis = 1)
    data3 = data3.groupby(['展業課代號']).sum()
    data3 = data3.reset_index()
    data3.columns = ['展業課代號', 欄位名]
    return data3
套裝初責任額 = 計算責任額(責任額,'套裝初','套裝初責任額')
套裝續責任額 = 計算責任額(責任額,'套裝續','套裝續責任額')
輔導初責任額 = 計算責任額(責任額,'輔導初','輔導初責任額')
輔導續責任額 = 計算責任額(責任額,'輔導續','輔導續責任額')

#串接資料
展業課責任額 = 套裝初責任額
for i in ([輔導初責任額,套裝續責任額,輔導續責任額]):
    展業課責任額 = 展業課責任額.merge(i,how = 'outer',on = '展業課代號')
展業課責任額 = 展業課責任額.fillna(0)
展業課責任額['續保責任額'] = 展業課責任額['套裝續責任額'] + 展業課責任額['輔導續責任額']
展業課責任額['總責任額'] = 展業課責任額['套裝初責任額'] + 展業課責任額['輔導初責任額'] + 展業課責任額['續保責任額']
#展業課責任額表製作完成

#製作展業課年度責任額表
def 計算年度責任額(data5, 篩選商品,欄位名):
    data5 = data5[data5['商品類別'] == 篩選商品]
    data5 = data5.drop('商品類別',axis = 1)
    data5 = data5.groupby(['展業課代號']).sum()
    data5 = data5.reset_index()
    data5.columns = ['展業課代號', 欄位名]
    return data5
套裝初_年度責任額 = 計算年度責任額(年度責任額, '套裝初','套裝初_年度責任額')
輔導初_年度責任額 = 計算年度責任額(年度責任額, '輔導初','輔導初_年度責任額')
套裝續_年度責任額 = 計算年度責任額(年度責任額, '套裝續','套裝續_年度責任額')
輔導續_年度責任額 = 計算年度責任額(年度責任額, '輔導續','輔導續_年度責任額')

展業課年度責任額 = 套裝初_年度責任額.merge(輔導初_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.merge(套裝續_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.merge(輔導續_年度責任額,how = 'outer',on = '展業課代號')
展業課年度責任額 = 展業課年度責任額.fillna(0)
展業課年度責任額['年度續保責任額'] = 展業課年度責任額['套裝續_年度責任額'] + 展業課年度責任額['輔導續_年度責任額']
展業課年度責任額['年度總責任額'] = 展業課年度責任額['套裝初_年度責任額'] + 展業課年度責任額['輔導初_年度責任額'] + 展業課年度責任額['年度續保責任額'] 
展業課年度責任額 = 展業課年度責任額.drop(['套裝續_年度責任額','輔導續_年度責任額'],axis=1)
#展業課年度責任額表製作完成

#製作展業課達成率表
展業課達成率 = 展業課績效.merge(展業課責任額,how = 'outer',on = '展業課代號')
展業課達成率['套裝初'] = 展業課達成率['套裝初'] / 10000
展業課達成率['輔導初'] = 展業課達成率['輔導初'] / 10000
展業課達成率['續保件'] = 展業課達成率['續保件'] / 10000
展業課達成率['總績效'] = 展業課達成率['總績效'] / 10000
展業課達成率 = 展業課達成率[['展業課代號','套裝初責任額','輔導初責任額','續保責任額','總責任額',
               '套裝初','輔導初','續保件','總績效']]
展業課達成率['套裝初達成率(%)'] = 展業課達成率['套裝初'] / 展業課達成率['套裝初責任額'] * 100
展業課達成率['輔導初達成率(%)'] = 展業課達成率['輔導初'] / 展業課達成率['輔導初責任額'] * 100
展業課達成率['續保件達成率(%)'] = 展業課達成率['續保件'] / 展業課達成率['續保責任額'] * 100
展業課達成率['總達成率(%)'] = 展業課達成率['總績效'] / 展業課達成率['總責任額'] * 100
展業課達成率 = 展業課達成率.fillna(0)
#展業課達成率表製作完成

#製作展業課件數表
def 計算件數(data4,篩選商品,篩選補件,篩選呵護,欄位名):
    data4 = data4[np.logical_and(data4['作帳工作月(西元)'] >=速報起始工作月,data4['作帳工作月(西元)'] <=速報結束工作月)]
    data4 = data4[np.logical_and(np.logical_and(np.logical_and(np.logical_and(
                                   data4['是否核實'] == '未核實',
                                   data4[重出單判斷[輸入重出單判斷]] == '首年'),
                                   data4['商品大類'] == 篩選商品),
                                   data4['補件'] == 篩選補件),
                                   data4['是否為呵護公教'] == 篩選呵護)]
    data4 = data4[['展業課代號','舉績件數']]
    data4 = data4.groupby(['展業課代號']).sum().reset_index()
    data4[欄位名] = data4['舉績件數']
    data4 = data4.drop(['舉績件數'],axis = 1)
    return data4
#如未來呵護調整為原資料，此處下方修改其他件為原資料
套裝件數 = 計算件數(final_sales_all,'套裝件','原資料','否','套裝件數')
輔導件數 = 計算件數(final_sales_all,'一般件','原資料','否','輔導件數')
呵護件數 = 計算件數(final_sales_all,'套裝件','其他件','是呵護','呵護件數')
其他件件數 = 計算件數(final_sales_all,'套裝件','其他件','否','其他件件數')
#串接資料
展業課件數 = 套裝件數.merge(輔導件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.merge(呵護件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.merge(其他件件數,how = 'outer',on = '展業課代號')
展業課件數 = 展業課件數.fillna(0)
#展業課件數表製作完成

#製作展業課速報績效表
展業課速報績效 = 展業課件數.merge(展業課達成率,how = 'outer',on = '展業課代號')
展業課速報績效 = 展業課速報績效.merge(展業課年度責任額,how = 'outer',on = '展業課代號')
展業課速報績效['套裝初年度進展率(%)'] = 展業課速報績效['套裝初'] / 展業課速報績效['套裝初_年度責任額'] * 100
展業課速報績效['輔導初年度進展率(%)'] = 展業課速報績效['輔導初'] / 展業課速報績效['輔導初_年度責任額'] * 100
展業課速報績效['續年度進展率(%)'] = 展業課速報績效['續保件'] / 展業課速報績效['年度續保責任額'] * 100
展業課速報績效['總保費年度進展率(%)'] = 展業課速報績效['總績效'] / 展業課速報績效['年度總責任額'] * 100
#串接轄區表(展業課、區部、輔導經理中文)
展業課名單 = pd.read_excel('展業課名單.xlsx')
展業課名單 = 展業課名單[['展業課代號','單位簡稱','輔導經理']]
展業課名單.columns = ['展業課代號','展業課名稱','輔導經理']
展業課速報績效 = 展業課速報績效.merge(展業課名單,how='right',on = '展業課代號')
展業課速報績效  = 展業課速報績效.fillna(0)

#排序欄位順序
展業課速報績效 = 展業課速報績效[['展業課名稱','展業課代號','套裝件數','輔導件數', '呵護件數', '其他件件數', '套裝初責任額', '輔導初責任額', '續保責任額',
       '總責任額', '套裝初', '輔導初', '續保件', '總績效','輔導經理', '套裝初達成率(%)', '輔導初達成率(%)','續保件達成率(%)', '總達成率(%)',
      '套裝初年度進展率(%)', '輔導初年度進展率(%)', '續年度進展率(%)', '總保費年度進展率(%)',
      '套裝初_年度責任額', '輔導初_年度責任額', '年度續保責任額', '年度總責任額']]
#篩選不是「其他」
展業課速報績效 = 展業課速報績效[展業課速報績效['展業課代號'] != '其他']
#依展業課代號排序
展業課速報績效.sort_values(['展業課代號'],inplace=True)
#展業課速報績效表製作完成
print('展業課速報績效表製作完成')
progress.update(1)

########################################################################################
                            #製作展業課舉績率
#製作展業課舉績表
展業課舉績 = final_sales_all[final_sales_all['商品別_中文'].isin(舉績率商品)]
展業課核實舉績 = 展業課舉績[np.logical_and(np.logical_and(np.logical_and(np.logical_and(展業課舉績['是否核實'] == '已核實'
                    ,展業課舉績['繳次'] == '首期'),展業課舉績[重出單判斷[輸入重出單判斷]] == '首年')
                    ,展業課舉績['發放工作月'] >=起始工作月),展業課舉績['發放工作月'] <=結束工作月)]
展業課速報舉績 = 展業課舉績[np.logical_and(展業課舉績['作帳工作月(西元)'] >=速報起始工作月,展業課舉績['作帳工作月(西元)'] <=速報結束工作月)]
展業課速報舉績 = 展業課速報舉績[np.logical_and(np.logical_and(展業課舉績['是否核實'] == '未核實'
                      ,展業課舉績['繳次'] == '首期'),展業課舉績[重出單判斷[輸入重出單判斷]] == '首年')]
展業課核實及速報舉績 = pd.concat([展業課核實舉績,展業課速報舉績])

def 計算舉績人數(data6,欄位名稱):
    data6 = data6[['展業課代號','SAS_ID']].drop_duplicates()
    data6 = data6.groupby('展業課代號').count()
    data6 = data6.reset_index()
    data6.columns = ['展業課代號',欄位名稱]
    return data6
展業課核實舉績 = 計算舉績人數(展業課核實舉績,'已核實舉績人數')
展業課速報舉績 = 計算舉績人數(展業課速報舉績,'速報舉績人數')
展業課核實及速報舉績 = 計算舉績人數(展業課核實及速報舉績,'總舉績人數(移除重複)')
展業課舉績 = 展業課核實舉績.merge(展業課速報舉績,how='outer',on='展業課代號')
展業課舉績 = 展業課舉績.merge(展業課核實及速報舉績,how='outer',on='展業課代號')
展業課舉績 = 展業課舉績.fillna(0)

展業課人數 = pd.read_excel('展業課單位人數.xlsx')
展業課舉績 = 展業課舉績.merge(展業課人數,how='outer',on='展業課代號')
展業課舉績['已核實舉績率(%)'] = 展業課舉績['已核實舉績人數'] / 展業課舉績['核實平均單位人數'] * 100
展業課舉績['速報舉績率(%)'] = 展業課舉績['速報舉績人數'] / 展業課舉績['速報平均單位人數'] * 100
展業課舉績['總舉績率(%)'] = 展業課舉績['總舉績人數(移除重複)'] / 展業課舉績['累計平均單位人數'] * 100
展業課舉績 = 展業課舉績.merge(展業課名單,how = 'right',on='展業課代號')
展業課舉績['目標'] = 展業課舉績['累計平均單位人數'] * 舉績率目標


展業課舉績 = 展業課舉績.fillna(0)
展業課舉績['差額人數'] = 展業課舉績['總舉績人數(移除重複)'] - 展業課舉績['目標']
展業課舉績 = 展業課舉績[['展業課名稱','展業課代號','核實平均單位人數','速報平均單位人數','累計平均單位人數',
             '已核實舉績人數','速報舉績人數','總舉績人數(移除重複)','已核實舉績率(%)',
             '速報舉績率(%)','總舉績率(%)','目標','差額人數']]
#依展業課代號排序
展業課舉績.sort_values(['展業課代號'],inplace=True)
#展業課舉績表製作完成
print('展業課舉績表製作完成')
progress.update(1)


#############################################################################################
#合併單位速報、核實績效
單位速報欄位 = list(單位速報績效.columns)
單位速報欄位 = 單位速報欄位[:3] + ([item+'(速報)' for item in 單位速報欄位[3:]])
單位速報績效.columns = 單位速報欄位 
單位核實欄位 = list(單位核實績效.columns)
單位核實欄位 = 單位核實欄位[:3] + ([item+'(核實)' for item in 單位核實欄位[3:]])
單位核實績效.columns = 單位核實欄位 
單位速報及核實績效 = 單位速報績效.merge(單位核實績效,how='outer',on='單位代號_7碼')
單位速報及核實績效.drop(['區部_y','單位_y'],axis=1,inplace=True)
單位速報及核實績效['套裝初年度進展率(%)(速報)'] = (單位速報及核實績效['套裝初(速報)']+單位速報及核實績效['套裝初(核實)'])                                                    /單位速報及核實績效['套裝初_年度責任額(核實)'] * 100
單位速報及核實績效['輔導初年度進展率(%)(速報)'] = (單位速報及核實績效['輔導初(速報)']+單位速報及核實績效['輔導初(核實)'])                                                    /單位速報及核實績效['輔導初_年度責任額(核實)'] * 100
單位速報及核實績效['續年度進展率(%)(速報)'] = (單位速報及核實績效['續保件(速報)']+單位速報及核實績效['續保件(核實)'])                                                    /單位速報及核實績效['年度續保責任額(核實)'] * 100
單位速報及核實績效['總保費年度進展率(%)(速報)'] = (單位速報及核實績效['總績效(速報)']+單位速報及核實績效['總績效(核實)'])                                                    /單位速報及核實績效['年度總責任額(核實)'] * 100

單位速報及核實績效.drop(['套裝初_年度責任額(速報)','輔導初_年度責任額(速報)','年度續保責任額(速報)','年度總責任額(速報)'],axis=1,inplace=True)

#合併區部速報、核實績效
區部速報欄位 = list(區部速報績效.columns)
區部速報欄位 = ([item+'(速報)' for item in 區部速報欄位])
區部速報績效.columns = 區部速報欄位 
區部核實欄位 = list(區部核實績效.columns)
區部核實欄位 = ([item+'(核實)' for item in 區部核實欄位])
區部核實績效.columns = 區部核實欄位 
區部速報及核實績效 = 區部速報績效.merge(區部核實績效,how='outer',on='區部')
區部速報及核實績效['套裝初年度進展率(%)(速報)'] = (區部速報及核實績效['套裝初(速報)']+區部速報及核實績效['套裝初(核實)'])                                                    /區部速報及核實績效['套裝初_年度責任額(核實)'] * 100
區部速報及核實績效['輔導初年度進展率(%)(速報)'] = (區部速報及核實績效['輔導初(速報)']+區部速報及核實績效['輔導初(核實)'])                                                    /區部速報及核實績效['輔導初_年度責任額(核實)'] * 100
區部速報及核實績效['續年度進展率(%)(速報)'] = (區部速報及核實績效['續保件(速報)']+區部速報及核實績效['續保件(核實)'])                                                    /區部速報及核實績效['年度續保責任額(核實)'] * 100
區部速報及核實績效['總保費年度進展率(%)(速報)'] = (區部速報及核實績效['總績效(速報)']+區部速報及核實績效['總績效(核實)'])                                                    /區部速報及核實績效['年度總責任額(核實)'] * 100
區部速報及核實績效.drop(['套裝初_年度責任額(速報)','輔導初_年度責任額(速報)','年度續保責任額(速報)','年度總責任額(速報)'],axis=1,inplace=True)


#合併展業課速報、核實績效
展業課速報欄位 = list(展業課速報績效.columns)
展業課速報欄位 = 展業課速報欄位[:2] + ([item+'(速報)' for item in 展業課速報欄位[2:]])
展業課速報績效.columns = 展業課速報欄位 
展業課核實欄位 = list(展業課核實績效.columns)
展業課核實欄位 = 展業課核實欄位[:2] + ([item+'(核實)' for item in 展業課核實欄位[2:]])
展業課核實績效.columns = 展業課核實欄位 
展業課速報及核實績效 = 展業課速報績效.merge(展業課核實績效,how='outer',on='展業課代號')
展業課速報及核實績效.drop(['展業課名稱_y'],axis=1,inplace=True)

展業課速報及核實績效['套裝初年度進展率(%)(速報)'] = (展業課速報及核實績效['套裝初(速報)']+展業課速報及核實績效['套裝初(核實)'])                                                    /展業課速報及核實績效['套裝初_年度責任額(核實)'] * 100
展業課速報及核實績效['輔導初年度進展率(%)(速報)'] = (展業課速報及核實績效['輔導初(速報)']+展業課速報及核實績效['輔導初(核實)'])                                                    /展業課速報及核實績效['輔導初_年度責任額(核實)'] * 100
展業課速報及核實績效['續年度進展率(%)(速報)'] = (展業課速報及核實績效['續保件(速報)']+展業課速報及核實績效['續保件(核實)'])                                                    /展業課速報及核實績效['年度續保責任額(核實)'] * 100
展業課速報及核實績效['總保費年度進展率(%)(速報)'] = (展業課速報及核實績效['總績效(速報)']+展業課速報及核實績效['總績效(核實)'])                                                    /展業課速報及核實績效['年度總責任額(核實)'] * 100

展業課速報及核實績效.drop(['套裝初_年度責任額(速報)','輔導初_年度責任額(速報)','年度續保責任額(速報)','年度總責任額(速報)'],axis=1,inplace=True)
##########################################################################################
                  #製作檔案表頭
if 速報起始工作月 == 速報結束工作月:
    速報表頭 = str(速報起始工作月-191100)[:3]+'_'+str(速報起始工作月-191100)[3:]+'工速報'
else:
    速報表頭 = str(速報起始工作月-191100)[:3]+'_'+str(速報起始工作月-191100)[3:] + '工~' +     str(速報結束工作月-191100)[:3]+'_'+str(速報結束工作月-191100)[3:] +     '工速報'
    

if 起始工作月 == 結束工作月:  
    核實表頭 = str(起始工作月-191100)[:3]+'_'+str(起始工作月-191100)[3:]+'工核實'
else:
    核實表頭 = str(起始工作月-191100)[:3]+'_'+str(起始工作月-191100)[3:] + '工~' +     str(結束工作月-191100)[:3]+'_'+str(結束工作月-191100)[3:] +     '工核實'
表頭 = pd.DataFrame({'表頭':[速報表頭,核實表頭,速報表頭+'＋'+核實表頭]})
##########################################################################################
                  #匯出檔案
print('正在匯出 專展工作月績效.xlsx...')
from pandas import ExcelWriter
with ExcelWriter('專展工作月績效.xlsx') as writer:
    單位速報及核實績效.to_excel(writer,sheet_name='單位速報及核實績效',index = False)   
    區部速報及核實績效.to_excel(writer,sheet_name='區部速報及核實績效')  
    展業課速報及核實績效.to_excel(writer,sheet_name='展業課速報及核實績效',index = False)
    單位舉績.to_excel(writer,sheet_name='單位舉績',index = False)  
    區部舉績.to_excel(writer,sheet_name='區部舉績',index = False)  
    展業課舉績.to_excel(writer,sheet_name='展業課舉績',index = False)  
    final_sales_all.to_excel(writer,sheet_name='績效明細',index = False)
    表頭.to_excel(writer,sheet_name='表頭',index = False)
    writer.save()
print('匯出完成')
progress.update(1)
progress.close()
end_time = datetime.datetime.now()
print('共',(end_time - start_time).seconds,'秒')
time.sleep(3)
